<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bootdo.domain.mapper.SysUserconnectionMapper">
  <resultMap id="BaseResultMap" type="com.bootdo.domain.entity.SysUserconnection">
    <id column="userId" jdbcType="BIGINT" property="userid" />
    <id column="providerId" jdbcType="VARCHAR" property="providerid" />
    <id column="providerUserId" jdbcType="VARCHAR" property="provideruserid" />
    <result column="rank" jdbcType="INTEGER" property="rank" />
    <result column="displayName" jdbcType="VARCHAR" property="displayname" />
    <result column="profileUrl" jdbcType="VARCHAR" property="profileurl" />
    <result column="imageUrl" jdbcType="VARCHAR" property="imageurl" />
    <result column="accessToken" jdbcType="VARCHAR" property="accesstoken" />
    <result column="secret" jdbcType="VARCHAR" property="secret" />
    <result column="refreshToken" jdbcType="VARCHAR" property="refreshtoken" />
    <result column="expireTime" jdbcType="BIGINT" property="expiretime" />
    <result column="unionid" jdbcType="VARCHAR" property="unionid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    userId, providerId, providerUserId, rank, displayName, profileUrl, imageUrl, accessToken, 
    secret, refreshToken, expireTime, unionid
  </sql>
  <select id="selectByExample" parameterType="com.bootdo.domain.entity.example.SysUserconnectionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_userconnection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.bootdo.domain.entity.SysUserconnectionKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_userconnection
    where userId = #{userid,jdbcType=BIGINT}
      and providerId = #{providerid,jdbcType=VARCHAR}
      and providerUserId = #{provideruserid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.bootdo.domain.entity.SysUserconnectionKey">
    delete from sys_userconnection
    where userId = #{userid,jdbcType=BIGINT}
      and providerId = #{providerid,jdbcType=VARCHAR}
      and providerUserId = #{provideruserid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.bootdo.domain.entity.example.SysUserconnectionExample">
    delete from sys_userconnection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bootdo.domain.entity.SysUserconnection">
    insert into sys_userconnection (userId, providerId, providerUserId, 
      rank, displayName, profileUrl, 
      imageUrl, accessToken, secret, 
      refreshToken, expireTime, unionid
      )
    values (#{userid,jdbcType=BIGINT}, #{providerid,jdbcType=VARCHAR}, #{provideruserid,jdbcType=VARCHAR}, 
      #{rank,jdbcType=INTEGER}, #{displayname,jdbcType=VARCHAR}, #{profileurl,jdbcType=VARCHAR}, 
      #{imageurl,jdbcType=VARCHAR}, #{accesstoken,jdbcType=VARCHAR}, #{secret,jdbcType=VARCHAR}, 
      #{refreshtoken,jdbcType=VARCHAR}, #{expiretime,jdbcType=BIGINT}, #{unionid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bootdo.domain.entity.SysUserconnection">
    insert into sys_userconnection
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userId,
      </if>
      <if test="providerid != null">
        providerId,
      </if>
      <if test="provideruserid != null">
        providerUserId,
      </if>
      <if test="rank != null">
        rank,
      </if>
      <if test="displayname != null">
        displayName,
      </if>
      <if test="profileurl != null">
        profileUrl,
      </if>
      <if test="imageurl != null">
        imageUrl,
      </if>
      <if test="accesstoken != null">
        accessToken,
      </if>
      <if test="secret != null">
        secret,
      </if>
      <if test="refreshtoken != null">
        refreshToken,
      </if>
      <if test="expiretime != null">
        expireTime,
      </if>
      <if test="unionid != null">
        unionid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="providerid != null">
        #{providerid,jdbcType=VARCHAR},
      </if>
      <if test="provideruserid != null">
        #{provideruserid,jdbcType=VARCHAR},
      </if>
      <if test="rank != null">
        #{rank,jdbcType=INTEGER},
      </if>
      <if test="displayname != null">
        #{displayname,jdbcType=VARCHAR},
      </if>
      <if test="profileurl != null">
        #{profileurl,jdbcType=VARCHAR},
      </if>
      <if test="imageurl != null">
        #{imageurl,jdbcType=VARCHAR},
      </if>
      <if test="accesstoken != null">
        #{accesstoken,jdbcType=VARCHAR},
      </if>
      <if test="secret != null">
        #{secret,jdbcType=VARCHAR},
      </if>
      <if test="refreshtoken != null">
        #{refreshtoken,jdbcType=VARCHAR},
      </if>
      <if test="expiretime != null">
        #{expiretime,jdbcType=BIGINT},
      </if>
      <if test="unionid != null">
        #{unionid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bootdo.domain.entity.example.SysUserconnectionExample" resultType="java.lang.Long">
    select count(*) from sys_userconnection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_userconnection
    <set>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.providerid != null">
        providerId = #{record.providerid,jdbcType=VARCHAR},
      </if>
      <if test="record.provideruserid != null">
        providerUserId = #{record.provideruserid,jdbcType=VARCHAR},
      </if>
      <if test="record.rank != null">
        rank = #{record.rank,jdbcType=INTEGER},
      </if>
      <if test="record.displayname != null">
        displayName = #{record.displayname,jdbcType=VARCHAR},
      </if>
      <if test="record.profileurl != null">
        profileUrl = #{record.profileurl,jdbcType=VARCHAR},
      </if>
      <if test="record.imageurl != null">
        imageUrl = #{record.imageurl,jdbcType=VARCHAR},
      </if>
      <if test="record.accesstoken != null">
        accessToken = #{record.accesstoken,jdbcType=VARCHAR},
      </if>
      <if test="record.secret != null">
        secret = #{record.secret,jdbcType=VARCHAR},
      </if>
      <if test="record.refreshtoken != null">
        refreshToken = #{record.refreshtoken,jdbcType=VARCHAR},
      </if>
      <if test="record.expiretime != null">
        expireTime = #{record.expiretime,jdbcType=BIGINT},
      </if>
      <if test="record.unionid != null">
        unionid = #{record.unionid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_userconnection
    set userId = #{record.userid,jdbcType=BIGINT},
      providerId = #{record.providerid,jdbcType=VARCHAR},
      providerUserId = #{record.provideruserid,jdbcType=VARCHAR},
      rank = #{record.rank,jdbcType=INTEGER},
      displayName = #{record.displayname,jdbcType=VARCHAR},
      profileUrl = #{record.profileurl,jdbcType=VARCHAR},
      imageUrl = #{record.imageurl,jdbcType=VARCHAR},
      accessToken = #{record.accesstoken,jdbcType=VARCHAR},
      secret = #{record.secret,jdbcType=VARCHAR},
      refreshToken = #{record.refreshtoken,jdbcType=VARCHAR},
      expireTime = #{record.expiretime,jdbcType=BIGINT},
      unionid = #{record.unionid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bootdo.domain.entity.SysUserconnection">
    update sys_userconnection
    <set>
      <if test="rank != null">
        rank = #{rank,jdbcType=INTEGER},
      </if>
      <if test="displayname != null">
        displayName = #{displayname,jdbcType=VARCHAR},
      </if>
      <if test="profileurl != null">
        profileUrl = #{profileurl,jdbcType=VARCHAR},
      </if>
      <if test="imageurl != null">
        imageUrl = #{imageurl,jdbcType=VARCHAR},
      </if>
      <if test="accesstoken != null">
        accessToken = #{accesstoken,jdbcType=VARCHAR},
      </if>
      <if test="secret != null">
        secret = #{secret,jdbcType=VARCHAR},
      </if>
      <if test="refreshtoken != null">
        refreshToken = #{refreshtoken,jdbcType=VARCHAR},
      </if>
      <if test="expiretime != null">
        expireTime = #{expiretime,jdbcType=BIGINT},
      </if>
      <if test="unionid != null">
        unionid = #{unionid,jdbcType=VARCHAR},
      </if>
    </set>
    where userId = #{userid,jdbcType=BIGINT}
      and providerId = #{providerid,jdbcType=VARCHAR}
      and providerUserId = #{provideruserid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bootdo.domain.entity.SysUserconnection">
    update sys_userconnection
    set rank = #{rank,jdbcType=INTEGER},
      displayName = #{displayname,jdbcType=VARCHAR},
      profileUrl = #{profileurl,jdbcType=VARCHAR},
      imageUrl = #{imageurl,jdbcType=VARCHAR},
      accessToken = #{accesstoken,jdbcType=VARCHAR},
      secret = #{secret,jdbcType=VARCHAR},
      refreshToken = #{refreshtoken,jdbcType=VARCHAR},
      expireTime = #{expiretime,jdbcType=BIGINT},
      unionid = #{unionid,jdbcType=VARCHAR}
    where userId = #{userid,jdbcType=BIGINT}
      and providerId = #{providerid,jdbcType=VARCHAR}
      and providerUserId = #{provideruserid,jdbcType=VARCHAR}
  </update>
</mapper>