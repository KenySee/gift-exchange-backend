<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bootdo.domain.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.bootdo.domain.entity.SysUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="userpassword" jdbcType="VARCHAR" property="userpassword" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="userstatus" jdbcType="VARCHAR" property="userstatus" />
    <result column="credentialssalt" jdbcType="VARCHAR" property="credentialssalt" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="create_tm" jdbcType="TIMESTAMP" property="createTm" />
    <result column="update_tm" jdbcType="TIMESTAMP" property="updateTm" />
    <result column="last_password_reset_date" jdbcType="TIMESTAMP" property="lastPasswordResetDate" />
    <result column="headimage" jdbcType="VARCHAR" property="headimage" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, userpassword, realname, mobile, userstatus, credentialssalt, email, 
    create_tm, update_tm, last_password_reset_date, headimage
  </sql>
  <select id="selectByExample" parameterType="com.bootdo.domain.entity.example.SysUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.bootdo.domain.entity.example.SysUserExample">
    delete from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bootdo.domain.entity.SysUser">
    insert into sys_user (id, username, userpassword, 
      realname, mobile, userstatus, 
      credentialssalt, email, create_tm, 
      update_tm, last_password_reset_date, headimage
      )
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{userpassword,jdbcType=VARCHAR}, 
      #{realname,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{userstatus,jdbcType=VARCHAR}, 
      #{credentialssalt,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{createTm,jdbcType=TIMESTAMP}, 
      #{updateTm,jdbcType=TIMESTAMP}, #{lastPasswordResetDate,jdbcType=TIMESTAMP}, #{headimage,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bootdo.domain.entity.SysUser">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="userpassword != null">
        userpassword,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="userstatus != null">
        userstatus,
      </if>
      <if test="credentialssalt != null">
        credentialssalt,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="createTm != null">
        create_tm,
      </if>
      <if test="updateTm != null">
        update_tm,
      </if>
      <if test="lastPasswordResetDate != null">
        last_password_reset_date,
      </if>
      <if test="headimage != null">
        headimage,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null">
        #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="userstatus != null">
        #{userstatus,jdbcType=VARCHAR},
      </if>
      <if test="credentialssalt != null">
        #{credentialssalt,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTm != null">
        #{createTm,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTm != null">
        #{updateTm,jdbcType=TIMESTAMP},
      </if>
      <if test="lastPasswordResetDate != null">
        #{lastPasswordResetDate,jdbcType=TIMESTAMP},
      </if>
      <if test="headimage != null">
        #{headimage,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bootdo.domain.entity.example.SysUserExample" resultType="java.lang.Long">
    select count(*) from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.userpassword != null">
        userpassword = #{record.userpassword,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null">
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.userstatus != null">
        userstatus = #{record.userstatus,jdbcType=VARCHAR},
      </if>
      <if test="record.credentialssalt != null">
        credentialssalt = #{record.credentialssalt,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.createTm != null">
        create_tm = #{record.createTm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTm != null">
        update_tm = #{record.updateTm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastPasswordResetDate != null">
        last_password_reset_date = #{record.lastPasswordResetDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.headimage != null">
        headimage = #{record.headimage,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_user
    set id = #{record.id,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      userpassword = #{record.userpassword,jdbcType=VARCHAR},
      realname = #{record.realname,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      userstatus = #{record.userstatus,jdbcType=VARCHAR},
      credentialssalt = #{record.credentialssalt,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      create_tm = #{record.createTm,jdbcType=TIMESTAMP},
      update_tm = #{record.updateTm,jdbcType=TIMESTAMP},
      last_password_reset_date = #{record.lastPasswordResetDate,jdbcType=TIMESTAMP},
      headimage = #{record.headimage,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bootdo.domain.entity.SysUser">
    update sys_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null">
        userpassword = #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="userstatus != null">
        userstatus = #{userstatus,jdbcType=VARCHAR},
      </if>
      <if test="credentialssalt != null">
        credentialssalt = #{credentialssalt,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTm != null">
        create_tm = #{createTm,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTm != null">
        update_tm = #{updateTm,jdbcType=TIMESTAMP},
      </if>
      <if test="lastPasswordResetDate != null">
        last_password_reset_date = #{lastPasswordResetDate,jdbcType=TIMESTAMP},
      </if>
      <if test="headimage != null">
        headimage = #{headimage,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bootdo.domain.entity.SysUser">
    update sys_user
    set username = #{username,jdbcType=VARCHAR},
      userpassword = #{userpassword,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      userstatus = #{userstatus,jdbcType=VARCHAR},
      credentialssalt = #{credentialssalt,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      create_tm = #{createTm,jdbcType=TIMESTAMP},
      update_tm = #{updateTm,jdbcType=TIMESTAMP},
      last_password_reset_date = #{lastPasswordResetDate,jdbcType=TIMESTAMP},
      headimage = #{headimage,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>